#!/bin/bash

# Atualiza os pacotes e instala o Nginx
apt-get update -y
apt-get install nginx -y
systemctl enable nginx
systemctl start nginx

# Cria a estrutura de diretórios
mkdir -p /var/www/html/restaurante
chmod 775 /var/www/html/
chown -R www-data:www-data /var/www/html/restaurante

# --- Baixar arquivos HTML de um repositório Git ---
apt-get install git -y
git clone https://github.com/ThiagoResende88/Configurando-Servidor-Web-com-Monitoramento-AWS/tree/main/restaurante /var/www/html/restaurante

# Configura o script de monitoramento
cat <<EOF > /home/ubuntu/monitor_site.sh
#!/bin/bash
TOKEN="8012066644:AAGRtXCFnV-Jey6waruwACG46gli8xlGrNs"
CHAT_ID="-4694350089"
URL="http://localhost"
LOG="/var/log/monitoramento.log"

STATUS=\$(curl -s -o /dev/null -w "%{http_code}" \$URL)
TIMESTAMP=\$(date "+%Y-%m-%d %H:%M:%S")

if [ \$STATUS -ne 200 ]; then
    echo "\$TIMESTAMP - ERRO: Site fora do ar (Status: \$STATUS)" >> \$LOG
    curl -s -X POST "https://api.telegram.org/bot\$TOKEN/sendMessage" \\
        -d chat_id="\$CHAT_ID" \\
        -d text="⚠️ ALERTA: Site indisponível (\$STATUS)" \\
        -d parse_mode="Markdown" >> /dev/null
else
    echo "\$TIMESTAMP - OK: Site disponível" >> \$LOG
fi
EOF

# Permissões e Cron
chmod +x /home/ubuntu/monitor_site.sh
(crontab -l 2>/dev/null; echo "*/1 * * * * /home/ubuntu/monitor_site.sh >> /var/log/cron_monitoramento.log 2>&1") | crontab -

# Reinicia o Nginx para aplicar as configurações
systemctl restart nginx
